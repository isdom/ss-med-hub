package com.yulore.aliyun.dashvector;

import com.yulore.funasr.TestFunasr;
import feign.Feign;
import feign.Logger;
import feign.jackson.JacksonDecoder;
import feign.jackson.JacksonEncoder;
import feign.slf4j.Slf4jLogger;
import lombok.extern.slf4j.Slf4j;
import org.springframework.cloud.openfeign.support.SpringMvcContract;

import java.util.Properties;

@Slf4j
public class TestDashVectorApi {
    public static void main(String[] args) throws Exception {
        final Properties props = new Properties();

        try (var configStream = TestFunasr.class.getClassLoader().getResourceAsStream("test-dv.properties")) {
            props.load(configStream);
        } catch (Exception e) {
            throw new RuntimeException("加载配置文件失败，请确保 test-esl.properties 存在且路径正确", e);
        }
        // 1. 读取音频文件并编码为 Base64
        final String dvUrl = props.getProperty("dv.url");
        final String dvToken = props.getProperty("dv.token");
        final String collection = props.getProperty("dv.collection");
        final String partition = props.getProperty("dv.partition");



        // 3. 创建 Feign 客户端
        final var dvApi = Feign.builder()
                .contract(new SpringMvcContract())
                //.client(new OkHttpClient())
                .encoder(new JacksonEncoder())
                .decoder(new JacksonDecoder())
                .logger(new Slf4jLogger(TestDashVectorApi.class))
                .logLevel(Logger.Level.FULL)
                .target(DashVectorApi.class, dvUrl);

        // 4. 发送请求
        final double[] v = new double[]{-0.3295256, -0.17705935, 1.022928, 1.0198534, -0.42479813, -1.2255149, -0.2649982, 0.89677095, 0.9805913, 0.49123985, 1.5492693, -1.2963856, -0.7076572, 0.805735, 0.46820468, -0.20547107, -0.53412914, -0.8741197, 0.7495861, 0.3918178, 0.824337, -1.1418775, -1.3815277, 0.5344182, 0.49287826, -0.13147886, 0.6015942, 0.13776958, -0.9433951, -0.7447425, 0.022609174, -0.49763384, 0.583477, -0.24991864, 1.175272, 0.6146955, -0.7004015, -0.96513885, -0.47899565, -0.010329202, -0.16336913, 0.08218032, -0.1284272, -1.0844691, 0.4582796, -0.1911331, -0.047462113, 0.4421455, -0.47159296, 0.9776487, -1.0751625, 0.09065851, 1.1733434, 0.6029103, 1.0716007, 0.10230908, 0.9872831, -0.078482404, -0.5094947, -0.13910043, -0.38475353, -0.45046824, -2.1151195, -0.21858571, -0.647521, -0.6242205, 0.22052805, -0.71769714, 0.006726049, 0.5833573, 0.5772088, -0.04059261, -1.0080582, -0.9567376, -0.6986491, 0.24069937, -1.2376847, -0.05535966, 1.261521, 1.4471648, 1.3510782, -0.0871812, -0.21559149, 1.0114653, -0.86692137, -0.9616498, 0.38310006, -0.11206631, -0.5496678, -0.27444506, -0.20568618, -1.2556902, 0.99798644, 1.6898092, -0.6694349, -0.45593113, -1.8430517, -0.8300301, 0.70730555, 0.3376866, 0.40427333, 0.5406852, -0.41392747, 0.8337147, -0.31554264, 1.6624869, 0.109335095, -0.2986305, 0.54605603, -0.2314685, 1.1568339, -0.57004064, 0.32931453, 0.34420153, -0.43923947, -1.4128171, -0.7175398, 0.39512846, -0.7896725, 1.5632944, 1.4082464, -1.061265, 1.2654643, -1.5255089, -0.582366, -0.30164272, 0.810943, -1.5032576, -0.40128627, 0.4368092, 0.32533288, 0.92224765, -1.0692861, 1.3402079, -1.1610576, 0.97767043, -0.19738552, 1.4583783, -1.1875045, -0.16533324, -1.0441922, 0.8174838, -0.7527624, -0.871786, 0.8593098, 1.3076919, -0.5616473, -0.7189294, 0.71335185, -0.47946596, 2.1039262, -0.19414902, 0.30927137, 0.29773045, -0.09270306, 1.0840828, -0.41824925, 0.2951035, -1.0231718, -0.40355647, 0.388976, 0.3228227, -0.009927714, 0.54192394, -0.6420307, -0.0966783, -1.070868, 0.8014507, -0.07306552, -0.80537415, -0.043290347, 1.0746087, -1.4736593, -0.6751823, 0.047653936, -0.21643877, 0.08517465, -1.7409192, -0.84329134, -1.7466342, -1.0995452, 0.39161333, 0.6950595, 0.69912344, 0.30032298, 0.13418016, 1.1627676, 0.39038712, 0.8398483, 0.8524389, 0.5776854, -0.7069975, 0.8389749, -1.1168178, 0.8770104, -0.839046, 0.5908232, -0.7677932, -0.35497528, 0.42607713, -0.3902708, -0.039020985, 0.6908043, 0.7665447, 1.30871, 1.6478798, -1.1112922, 0.6933499, 1.1369725, 0.32134163, -0.2467089, 0.02600868, -0.40866652, -0.4229449, 1.6300514, 0.37970227, 0.017471299, -0.020537384, 0.21027027, -1.3354481, 0.7072417, 0.98026705, 1.0148119, -0.39760008, -0.4091679, 0.8975327, -0.43436253, 0.9319899, 0.34887716, 0.42658895, -0.13472258, 0.62042415, -0.46034992, 0.8888553, 0.41628474, -0.5661123, -0.60285205, -0.21567193, -0.86199546, -0.04408001, -1.4565016, 1.8562706, -1.4093705, 0.50713444, 0.048264086, 0.28787205, -0.16397956, -0.3297568, -0.23357904, -0.37721345, -0.5119096, -0.7010846, -1.5269527, -0.7981683, -0.9483145, -0.8573893, 0.26113814, -0.089847356, -0.13283579, -0.25661415, -1.4287852, 0.44273245, -1.2394437, 0.029922023, 0.69333196, -1.3635242, 0.81883276, 0.9522983, -0.7318364, 0.3963763, -0.2984326, 0.7960819, -0.68738735, -0.903618, -0.56738466, 0.08601001, 0.10515694, 0.42485785, 0.34816316, 0.18595621, 0.037991267, 1.0258447, -0.496419, -0.767619, -0.37776607, 0.8866081, 0.875774, 0.36176336, 0.6223619, -0.70186275, -0.405836, 0.5854782, 1.1354394, -0.42827258, 0.17009178, 0.9335565, -1.5288637, 0.73145187, 1.0074086, 0.18832955, 0.70682317, -0.23097086, 0.111257076, -0.8547546, 0.18951717, -0.89730555, 0.38697, -0.3681158, -0.22892109, 0.6164625, -1.2233212, -0.496292, -0.34009007, 0.7554325, 0.9125571, 0.15266669, -0.4627096, 0.54911935, -0.9144701, -0.39321452, -0.42296398, -0.76182884, -0.2092675, 0.9618193, -0.74163115, -0.7667061, 0.15163669, 0.40773115, -1.5795238, -0.74362886, -0.8041944, -0.2767148, 0.08408624, 0.5465381, 0.95766354, -1.2515786, -0.8896793, 0.28768864, 2.5832586, 1.8842882, 0.43183964, 0.34743315, 1.158709, 1.9012591, 1.1165593, 0.6843621, -0.48635745, 0.24716501, 0.28587088, -0.2784185, -0.8228893, -0.30368313, 0.35122377, -1.7685173, -0.16400167, -0.40375152, 2.6665876, -0.44934586, 0.041182287, -0.4744959, -0.87344056, 1.0727172, -0.47259274, 0.5956205, -1.3167025, -0.7780007, -1.5640779, 0.17651817, -0.17635697, 0.48903692, -0.6189604, 1.4671928, 0.4820985, 0.053438775, -0.22630401, -0.71577376, -0.36613286, 1.0896894, -0.18093476, -0.94834316, 0.94650394, 0.026164487, -0.30735335, -0.21968207, 1.9514592, 0.21697348, -0.7974286, 1.3064281, 0.78164077, -1.4967338, 1.2548821, -1.0449976, 1.191908, -1.0441048, 1.1170735, -0.008217968, -1.390151, -0.23047769, 0.29962775, -0.85832125, 0.90228355, -0.067602344, -1.4717078, 0.7815554, -0.6362084, -0.3395179, -0.06894654, -1.2129142, -0.902132, -1.8819671, 2.395896, -1.1870255, -1.424475, 1.4148159, 0.6145932, 1.3494687, -0.21191043, -0.13719541, -0.88371146, 0.2015681, -0.1298829, -1.621318, -0.32555905, -0.28354192, 0.5668598, -0.12767208, -0.8522482, 1.5522088, -3.6847425, 0.022865472, -0.40495607, -0.20834264, -0.088924795, -0.33304992, 0.65524215, -0.15358204, -1.0226643, -0.19229521, 0.23305658, 0.4627869, -1.7693299, 0.57896316, 0.5134028, -0.17925888, -0.31435344, 0.5145564, -0.19595608, 1.1295168, 1.4859146, 1.5986068, 2.0629964, 0.30410987, -1.120444, -0.31163812, 0.7068756, 0.42797542, -0.707656, 0.4108142, 0.043243945, -0.68086433, 0.5050573, -0.16431794, 0.3076164, 0.7670729, -1.1502769, -0.3018617, -0.26714405, -0.806001, -0.07067804, 0.1989044, 0.22517598, -1.2986654, -0.9025891, 0.12940744, -0.82511556, 2.0453162, -0.33825842, 0.5795576, 0.09427935, 0.67612493, 0.85151756, -0.8002776, -0.98137116, 0.65149117, -0.46534085, 1.800435, 1.1496458, 0.77471066, -0.23501128, -1.4129786, -0.20116082, 0.012187228, -0.6103395, -0.09625016, 0.5125427, 1.913969, 0.6716411, 0.6833105, 1.136007, 1.0027657, -1.1371207, 0.36264008, 0.2976218, -0.7584059, 0.9396483, 0.67534775, 1.4722356, 0.76989627, -1.6229964, -1.0687052, 0.35810784, 0.43975797};
        final float[] f = new float[v.length];
        int idx=0;
        for (var d : v) {
            f[idx++] = (float)d;
        }

        final var response = dvApi.queryDoc(
                dvToken,
                "application/json",
                collection,
                DashVectorApi.QueryDocRequest.builder().vector(f).partition(partition).build()
        );
        log.info("dvApi.queryDoc resp: {}", response);
    }
}
